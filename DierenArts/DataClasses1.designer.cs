#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DierenArts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DierenArts")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaas_Dier(Baas_Dier instance);
    partial void UpdateBaas_Dier(Baas_Dier instance);
    partial void DeleteBaas_Dier(Baas_Dier instance);
    partial void InsertDier(Dier instance);
    partial void UpdateDier(Dier instance);
    partial void DeleteDier(Dier instance);
    partial void InsertBaa(Baa instance);
    partial void UpdateBaa(Baa instance);
    partial void DeleteBaa(Baa instance);
    partial void InsertTime(Time instance);
    partial void UpdateTime(Time instance);
    partial void DeleteTime(Time instance);
    partial void InsertAfspraak(Afspraak instance);
    partial void UpdateAfspraak(Afspraak instance);
    partial void DeleteAfspraak(Afspraak instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DierenArts.Properties.Settings.Default.DierenArtsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Baas_Dier> Baas_Diers
		{
			get
			{
				return this.GetTable<Baas_Dier>();
			}
		}
		
		public System.Data.Linq.Table<Dier> Diers
		{
			get
			{
				return this.GetTable<Dier>();
			}
		}
		
		public System.Data.Linq.Table<Baa> Baas
		{
			get
			{
				return this.GetTable<Baa>();
			}
		}
		
		public System.Data.Linq.Table<Time> Times
		{
			get
			{
				return this.GetTable<Time>();
			}
		}
		
		public System.Data.Linq.Table<Afspraak> Afspraaks
		{
			get
			{
				return this.GetTable<Afspraak>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Baas_Dier")]
	public partial class Baas_Dier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BaasDierID;
		
		private int _BaasID;
		
		private int _DierID;
		
		private EntityRef<Dier> _Dier;
		
		private EntityRef<Baa> _Baa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaasDierIDChanging(int value);
    partial void OnBaasDierIDChanged();
    partial void OnBaasIDChanging(int value);
    partial void OnBaasIDChanged();
    partial void OnDierIDChanging(int value);
    partial void OnDierIDChanged();
    #endregion
		
		public Baas_Dier()
		{
			this._Dier = default(EntityRef<Dier>);
			this._Baa = default(EntityRef<Baa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaasDierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BaasDierID
		{
			get
			{
				return this._BaasDierID;
			}
			set
			{
				if ((this._BaasDierID != value))
				{
					this.OnBaasDierIDChanging(value);
					this.SendPropertyChanging();
					this._BaasDierID = value;
					this.SendPropertyChanged("BaasDierID");
					this.OnBaasDierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaasID", DbType="Int NOT NULL")]
		public int BaasID
		{
			get
			{
				return this._BaasID;
			}
			set
			{
				if ((this._BaasID != value))
				{
					if (this._Baa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaasIDChanging(value);
					this.SendPropertyChanging();
					this._BaasID = value;
					this.SendPropertyChanged("BaasID");
					this.OnBaasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DierID", DbType="Int NOT NULL")]
		public int DierID
		{
			get
			{
				return this._DierID;
			}
			set
			{
				if ((this._DierID != value))
				{
					if (this._Dier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDierIDChanging(value);
					this.SendPropertyChanging();
					this._DierID = value;
					this.SendPropertyChanged("DierID");
					this.OnDierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dier_Baas_Dier", Storage="_Dier", ThisKey="DierID", OtherKey="DierID", IsForeignKey=true)]
		public Dier Dier
		{
			get
			{
				return this._Dier.Entity;
			}
			set
			{
				Dier previousValue = this._Dier.Entity;
				if (((previousValue != value) 
							|| (this._Dier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dier.Entity = null;
						previousValue.Baas_Diers.Remove(this);
					}
					this._Dier.Entity = value;
					if ((value != null))
					{
						value.Baas_Diers.Add(this);
						this._DierID = value.DierID;
					}
					else
					{
						this._DierID = default(int);
					}
					this.SendPropertyChanged("Dier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baa_Baas_Dier", Storage="_Baa", ThisKey="BaasID", OtherKey="BaasID", IsForeignKey=true)]
		public Baa Baa
		{
			get
			{
				return this._Baa.Entity;
			}
			set
			{
				Baa previousValue = this._Baa.Entity;
				if (((previousValue != value) 
							|| (this._Baa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Baa.Entity = null;
						previousValue.Baas_Diers.Remove(this);
					}
					this._Baa.Entity = value;
					if ((value != null))
					{
						value.Baas_Diers.Add(this);
						this._BaasID = value.BaasID;
					}
					else
					{
						this._BaasID = default(int);
					}
					this.SendPropertyChanged("Baa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dier")]
	public partial class Dier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DierID;
		
		private string _Naam;
		
		private string _DierSoort;
		
		private EntitySet<Baas_Dier> _Baas_Diers;
		
		private EntitySet<Afspraak> _Afspraaks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDierIDChanging(int value);
    partial void OnDierIDChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnDierSoortChanging(string value);
    partial void OnDierSoortChanged();
    #endregion
		
		public Dier()
		{
			this._Baas_Diers = new EntitySet<Baas_Dier>(new Action<Baas_Dier>(this.attach_Baas_Diers), new Action<Baas_Dier>(this.detach_Baas_Diers));
			this._Afspraaks = new EntitySet<Afspraak>(new Action<Afspraak>(this.attach_Afspraaks), new Action<Afspraak>(this.detach_Afspraaks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DierID
		{
			get
			{
				return this._DierID;
			}
			set
			{
				if ((this._DierID != value))
				{
					this.OnDierIDChanging(value);
					this.SendPropertyChanging();
					this._DierID = value;
					this.SendPropertyChanged("DierID");
					this.OnDierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DierSoort", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string DierSoort
		{
			get
			{
				return this._DierSoort;
			}
			set
			{
				if ((this._DierSoort != value))
				{
					this.OnDierSoortChanging(value);
					this.SendPropertyChanging();
					this._DierSoort = value;
					this.SendPropertyChanged("DierSoort");
					this.OnDierSoortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dier_Baas_Dier", Storage="_Baas_Diers", ThisKey="DierID", OtherKey="DierID")]
		public EntitySet<Baas_Dier> Baas_Diers
		{
			get
			{
				return this._Baas_Diers;
			}
			set
			{
				this._Baas_Diers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dier_Afspraak", Storage="_Afspraaks", ThisKey="DierID", OtherKey="DierID")]
		public EntitySet<Afspraak> Afspraaks
		{
			get
			{
				return this._Afspraaks;
			}
			set
			{
				this._Afspraaks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Baas_Diers(Baas_Dier entity)
		{
			this.SendPropertyChanging();
			entity.Dier = this;
		}
		
		private void detach_Baas_Diers(Baas_Dier entity)
		{
			this.SendPropertyChanging();
			entity.Dier = null;
		}
		
		private void attach_Afspraaks(Afspraak entity)
		{
			this.SendPropertyChanging();
			entity.Dier = this;
		}
		
		private void detach_Afspraaks(Afspraak entity)
		{
			this.SendPropertyChanging();
			entity.Dier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Baas")]
	public partial class Baa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BaasID;
		
		private string _Voornaam;
		
		private string _Achternaam;
		
		private string _Adress;
		
		private string _Postcode;
		
		private string _Woonplaats;
		
		private int _Telefoon;
		
		private string _Email;
		
		private EntitySet<Baas_Dier> _Baas_Diers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaasIDChanging(int value);
    partial void OnBaasIDChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnAchternaamChanging(string value);
    partial void OnAchternaamChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnWoonplaatsChanging(string value);
    partial void OnWoonplaatsChanged();
    partial void OnTelefoonChanging(int value);
    partial void OnTelefoonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Baa()
		{
			this._Baas_Diers = new EntitySet<Baas_Dier>(new Action<Baas_Dier>(this.attach_Baas_Diers), new Action<Baas_Dier>(this.detach_Baas_Diers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaasID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BaasID
		{
			get
			{
				return this._BaasID;
			}
			set
			{
				if ((this._BaasID != value))
				{
					this.OnBaasIDChanging(value);
					this.SendPropertyChanging();
					this._BaasID = value;
					this.SendPropertyChanged("BaasID");
					this.OnBaasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Achternaam", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Achternaam
		{
			get
			{
				return this._Achternaam;
			}
			set
			{
				if ((this._Achternaam != value))
				{
					this.OnAchternaamChanging(value);
					this.SendPropertyChanging();
					this._Achternaam = value;
					this.SendPropertyChanged("Achternaam");
					this.OnAchternaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Woonplaats", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Woonplaats
		{
			get
			{
				return this._Woonplaats;
			}
			set
			{
				if ((this._Woonplaats != value))
				{
					this.OnWoonplaatsChanging(value);
					this.SendPropertyChanging();
					this._Woonplaats = value;
					this.SendPropertyChanged("Woonplaats");
					this.OnWoonplaatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefoon", DbType="Int NOT NULL")]
		public int Telefoon
		{
			get
			{
				return this._Telefoon;
			}
			set
			{
				if ((this._Telefoon != value))
				{
					this.OnTelefoonChanging(value);
					this.SendPropertyChanging();
					this._Telefoon = value;
					this.SendPropertyChanged("Telefoon");
					this.OnTelefoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baa_Baas_Dier", Storage="_Baas_Diers", ThisKey="BaasID", OtherKey="BaasID")]
		public EntitySet<Baas_Dier> Baas_Diers
		{
			get
			{
				return this._Baas_Diers;
			}
			set
			{
				this._Baas_Diers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Baas_Diers(Baas_Dier entity)
		{
			this.SendPropertyChanging();
			entity.Baa = this;
		}
		
		private void detach_Baas_Diers(Baas_Dier entity)
		{
			this.SendPropertyChanging();
			entity.Baa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Time")]
	public partial class Time : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tijd;
		
		private EntitySet<Afspraak> _Afspraaks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTijdChanging(string value);
    partial void OnTijdChanged();
    #endregion
		
		public Time()
		{
			this._Afspraaks = new EntitySet<Afspraak>(new Action<Afspraak>(this.attach_Afspraaks), new Action<Afspraak>(this.detach_Afspraaks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tijd", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Tijd
		{
			get
			{
				return this._Tijd;
			}
			set
			{
				if ((this._Tijd != value))
				{
					this.OnTijdChanging(value);
					this.SendPropertyChanging();
					this._Tijd = value;
					this.SendPropertyChanged("Tijd");
					this.OnTijdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Afspraak", Storage="_Afspraaks", ThisKey="ID", OtherKey="Time_ID")]
		public EntitySet<Afspraak> Afspraaks
		{
			get
			{
				return this._Afspraaks;
			}
			set
			{
				this._Afspraaks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Afspraaks(Afspraak entity)
		{
			this.SendPropertyChanging();
			entity.Time = this;
		}
		
		private void detach_Afspraaks(Afspraak entity)
		{
			this.SendPropertyChanging();
			entity.Time = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Afspraak")]
	public partial class Afspraak : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AfspraakID;
		
		private System.DateTime _Datum;
		
		private int _Time_ID;
		
		private string _AfspraakSoort;
		
		private int _DierID;
		
		private EntityRef<Dier> _Dier;
		
		private EntityRef<Time> _Time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAfspraakIDChanging(int value);
    partial void OnAfspraakIDChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnTime_IDChanging(int value);
    partial void OnTime_IDChanged();
    partial void OnAfspraakSoortChanging(string value);
    partial void OnAfspraakSoortChanged();
    partial void OnDierIDChanging(int value);
    partial void OnDierIDChanged();
    #endregion
		
		public Afspraak()
		{
			this._Dier = default(EntityRef<Dier>);
			this._Time = default(EntityRef<Time>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfspraakID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AfspraakID
		{
			get
			{
				return this._AfspraakID;
			}
			set
			{
				if ((this._AfspraakID != value))
				{
					this.OnAfspraakIDChanging(value);
					this.SendPropertyChanging();
					this._AfspraakID = value;
					this.SendPropertyChanged("AfspraakID");
					this.OnAfspraakIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_ID", DbType="Int NOT NULL")]
		public int Time_ID
		{
			get
			{
				return this._Time_ID;
			}
			set
			{
				if ((this._Time_ID != value))
				{
					if (this._Time.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTime_IDChanging(value);
					this.SendPropertyChanging();
					this._Time_ID = value;
					this.SendPropertyChanged("Time_ID");
					this.OnTime_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfspraakSoort", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string AfspraakSoort
		{
			get
			{
				return this._AfspraakSoort;
			}
			set
			{
				if ((this._AfspraakSoort != value))
				{
					this.OnAfspraakSoortChanging(value);
					this.SendPropertyChanging();
					this._AfspraakSoort = value;
					this.SendPropertyChanged("AfspraakSoort");
					this.OnAfspraakSoortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DierID", DbType="Int NOT NULL")]
		public int DierID
		{
			get
			{
				return this._DierID;
			}
			set
			{
				if ((this._DierID != value))
				{
					if (this._Dier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDierIDChanging(value);
					this.SendPropertyChanging();
					this._DierID = value;
					this.SendPropertyChanged("DierID");
					this.OnDierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dier_Afspraak", Storage="_Dier", ThisKey="DierID", OtherKey="DierID", IsForeignKey=true)]
		public Dier Dier
		{
			get
			{
				return this._Dier.Entity;
			}
			set
			{
				Dier previousValue = this._Dier.Entity;
				if (((previousValue != value) 
							|| (this._Dier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dier.Entity = null;
						previousValue.Afspraaks.Remove(this);
					}
					this._Dier.Entity = value;
					if ((value != null))
					{
						value.Afspraaks.Add(this);
						this._DierID = value.DierID;
					}
					else
					{
						this._DierID = default(int);
					}
					this.SendPropertyChanged("Dier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Afspraak", Storage="_Time", ThisKey="Time_ID", OtherKey="ID", IsForeignKey=true)]
		public Time Time
		{
			get
			{
				return this._Time.Entity;
			}
			set
			{
				Time previousValue = this._Time.Entity;
				if (((previousValue != value) 
							|| (this._Time.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time.Entity = null;
						previousValue.Afspraaks.Remove(this);
					}
					this._Time.Entity = value;
					if ((value != null))
					{
						value.Afspraaks.Add(this);
						this._Time_ID = value.ID;
					}
					else
					{
						this._Time_ID = default(int);
					}
					this.SendPropertyChanged("Time");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
